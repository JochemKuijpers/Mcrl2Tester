% meas = true when the Meas chuck is A, false otherwise (Bool)
% waferType = The type of wafers in the current lot (ChuckType = A, B or AB)

[true*] forall n: Nat, t: ChuckType . [ lot_info(n, t)]
% X(true,t) should hold after the first lot_info(n, t):
nu X (meas: Bool = true, waferType: ChuckType = t) . (
    % Swap changes the chuck type at Meas
    [swap] X(!meas, waferType) &&
    % Starting a new lot updates the wafer type
    forall newN: Nat, newWaferType: ChuckType .
    [lot_info(newN, newWaferType)] X(meas, newWaferType) &&
    % When moving to Meas from In, the chuck should be A for lots of A
    % and the chuck should be B for lots of B. Lots of AB don't matter
    [move_r2(In, Meas)]
        val((waferType == A) => meas && (waferType == B) => !meas) &&
    % X(meas,waferType) should hold after all actions other than 
    % swap and any lot_info
    [!(swap || exists m:Nat, q:ChuckType . lot_info(m,q))] X(meas, waferType)
)
