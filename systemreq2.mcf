% measIsA = the Meas chuck is of type A
% waferType = The type of wafer (RType = A, B or AB)

[true*] forall n : Nat, t : RType . [ lot_info(n, t)]
nu X (measIsA: Bool = true, waferType : RType = t) . (
    forall newWaferType : RType, newN : Nat .
    [swap] X(!measIsA, waferType) &&
    [lot_info(newN, newWaferType)] X(measIsA, newWaferType) &&
    [move_r2(In, Meas)] (val(!measIsA && waferType == A) => false) &&
    [move_r2(In, Meas)] (val(measIsA && waferType == B) => false) &&
    [!(swap || move_r2(In, Meas) || exists m:Nat, q:RType . lot_info(m,q))] X(measIsA, waferType)
)
